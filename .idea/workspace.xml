<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a9b1a942-d96a-4290-9afd-a551a3427cfd" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/1.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/img_1.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2m7W9ivE6bXX2Kpo6HMuGan90BH" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "master",
    "last_opened_file_path": "C:/Users/Sergey/Desktop/proj/calc-credit/src",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs.jest.jest_package": "C:/Users/Sergey/Desktop/proj/calc-credit/node_modules/react-scripts",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\Sergey\Desktop\proj\calc-credit\src" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Sergey\Desktop\proj\calc-credit\src\__tests__" />
      <recent name="C:\Users\Sergey\Desktop\proj\calc-credit\src" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.isHolidayOrSunday.должен возвращать false для рабочего дня">
    <configuration name="getNextWorkingDay. проверка пропуска воскресенья и возвращает понедельник " type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/__tests__/calculatePayments.test.jsx" />
      <test-names>
        <test-name value="getNextWorkingDay" />
        <test-name value=" проверка пропуска воскресенья и возвращает понедельник " />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="getNextWorkingDay.проверка пропуска праздника и возвращает на следующий рабочий день" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/__tests__/calculatePayments.test.jsx" />
      <test-names>
        <test-name value="getNextWorkingDay" />
        <test-name value="проверка пропуска праздника и возвращает на следующий рабочий день" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="isHolidayOrSunday.должен возвращать false для рабочего дня" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/__tests__/calculatePayments.test.jsx" />
      <test-names>
        <test-name value="isHolidayOrSunday" />
        <test-name value="должен возвращать false для рабочего дня" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="isHolidayOrSunday.должен возвращать true для праздника" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/__tests__/calculatePayments.test.jsx" />
      <test-names>
        <test-name value="isHolidayOrSunday" />
        <test-name value="должен возвращать true для праздника" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="isHolidayOrSunday.должен возвращать true для воскресенья" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/__tests__/calculatePayments.test.jsx" />
      <test-names>
        <test-name value="isHolidayOrSunday" />
        <test-name value="должен возвращать true для воскресенья" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.isHolidayOrSunday.должен возвращать false для рабочего дня" />
        <item itemvalue="Jest.isHolidayOrSunday.должен возвращать true для праздника" />
        <item itemvalue="Jest.isHolidayOrSunday.должен возвращать true для воскресенья" />
        <item itemvalue="Jest.getNextWorkingDay. проверка пропуска воскресенья и возвращает понедельник " />
        <item itemvalue="Jest.getNextWorkingDay.проверка пропуска праздника и возвращает на следующий рабочий день" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="a9b1a942-d96a-4290-9afd-a551a3427cfd" name="Changes" comment="" />
      <created>1726427946025</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1726427946025</updated>
      <workItem from="1726427947283" duration="244000" />
      <workItem from="1726428201607" duration="15272000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>